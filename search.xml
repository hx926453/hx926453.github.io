<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>将使用的Ubuntu封装成可以安装的镜像</title>
      <link href="/posts/a2644a6e/"/>
      <url>/posts/a2644a6e/</url>
      
        <content type="html"><![CDATA[<p>Ubuntu封装镜像<a id="more"></a></p><h1 id="下载remastersys"><a href="#下载remastersys" class="headerlink" title="下载remastersys"></a>下载remastersys</h1><pre class=" language-cpp"><code class="language-cpp">wget ftp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>ftp<span class="token punctuation">.</span>gwdg<span class="token punctuation">.</span>de<span class="token operator">/</span>pub<span class="token operator">/</span>linux<span class="token operator">/</span>easyvdr<span class="token operator">/</span>mirror<span class="token operator">/</span>remastersys<span class="token operator">/</span>ubuntu<span class="token operator">/</span>remastersys<span class="token operator">/</span>remastersys_3<span class="token number">.0</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">-</span>2_all<span class="token punctuation">.</span>debwget ftp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>ftp<span class="token punctuation">.</span>gwdg<span class="token punctuation">.</span>de<span class="token operator">/</span>pub<span class="token operator">/</span>linux<span class="token operator">/</span>easyvdr<span class="token operator">/</span>mirror<span class="token operator">/</span>remastersys<span class="token operator">/</span>ubuntu<span class="token operator">/</span>remastersys<span class="token operator">-</span>gui<span class="token operator">/</span>remastersys<span class="token operator">-</span>gui_3<span class="token number">.0</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">-</span>1_amd64<span class="token punctuation">.</span>deb</code></pre><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><pre class=" language-cpp"><code class="language-cpp">sudo apt install syslinux<span class="token operator">-</span>utils isolinux squashfs<span class="token operator">-</span>tools casper libdebian<span class="token operator">-</span>installer4 ubiquity<span class="token operator">-</span>frontend<span class="token operator">-</span>debconf user<span class="token operator">-</span>setup discoversudo apt install libvte<span class="token operator">-</span>common libvte9 plymouth<span class="token operator">-</span>x11wget http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>security<span class="token punctuation">.</span>ubuntu<span class="token punctuation">.</span>com<span class="token operator">/</span>ubuntu<span class="token operator">/</span>pool<span class="token operator">/</span>universe<span class="token operator">/</span>x<span class="token operator">/</span>xresprobe<span class="token operator">/</span>xresprobe_0<span class="token number">.4</span><span class="token punctuation">.</span>24ubuntu9_amd64<span class="token punctuation">.</span>debsudo apt<span class="token operator">-</span>get install dialog</code></pre><h1 id="安装remastersys"><a href="#安装remastersys" class="headerlink" title="安装remastersys"></a>安装remastersys</h1><pre class=" language-css"><code class="language-css">sudo dpkg -i remastersys_<span class="token number">3.0.4</span>-<span class="token number">2</span>_all<span class="token number">.</span>debsudo dpkg -i remastersys-gui_<span class="token number">3.0.4</span>-<span class="token number">1</span>_amd<span class="token number">64.</span>deb</code></pre><h1 id="启动remastersys"><a href="#启动remastersys" class="headerlink" title="启动remastersys"></a>启动remastersys</h1><pre class=" language-cpp"><code class="language-cpp">sudo remastersys<span class="token operator">-</span>guiBackup：打包整个系统，包括你的个人数据和配置信息。Distribution：打包一个可与朋友分享的iso文件，不包括你的个人数据和配置信息。Customize<span class="token operator">:</span> 软件设置Clea WorkingFolder：清除临时文件Check Log：检查remastersys<span class="token punctuation">.</span>log</code></pre><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/remastersys/remastersys.png" alt=""></p><pre><code>Splash image:设置live菜单背景图片，大小为640x480 png格式Grub image:设置Grub菜单背景图片Plymouth Theme:选择启动图形界面加载动画User Settings：将用户设置复制到/etc/skel并作为默认设置Configure:自定义remastersys设置</code></pre><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/remastersys/remastersys1.png" alt=""></p><pre><code>Remastersys的语法格式为：sudo remastersys backup|clean|dist [cdfs|iso] [filename.iso]常用命令解释及其如下：sudo remastersys backup：将系统备份制成一个live cd/dvd(包含/home目录下的数据)sudo remastersys backup custom.iso：将系统备份制成一个live cd/dvd其名叫 custom.iso 的ISO文件sudo remastersys clean：清除临时文件(清空/home/remastersys 下所有数据)sudo remastersys dist：产生一个可发布且包含个人数据的 livecd/dvd (不包含/home目录下的数据)sudo remastersys dist cdfs：产生一个只包含系统的可发布的livecd/dvdsudo remastersys dist iso custom.iso：产生一个可发布且包含个人资料名为custom.iso的 livecd/dvd</code></pre><p>注：</p><pre><code>1. sudo remastersys clean 需要谨慎使用。因为这条命令会清除上述目录下 的所有数据。请谨慎使用该命令。  2. 执行sudo remastersys dist iso custom.iso之前需要先执行命令：sudo remastersys dist cdfs  3. 安装一个Ubuntu并配置至理想状态，但不能安装任何专有的显卡驱动程 序（如NVidia或ATI的驱动），因为专有显卡驱动不能在Live CD中使用，用户在安装系统后需要重装显卡驱动。4. 要有足够的空闲硬盘空间，至少是被打包的系统占用空间的两倍。</code></pre><h1 id="问题参考"><a href="#问题参考" class="headerlink" title="问题参考"></a>问题参考</h1><p>“Lightdm not setup properly. You must set your default desktop with lightdm prior to remastering”   大致为缺少默认的桌面环境</p><pre class=" language-undefined"><code class="language-undefined">sudo gedit /etc/lightdm/lightdm.conf</code></pre><h2 id="添加内容"><a href="#添加内容" class="headerlink" title="添加内容"></a>添加内容</h2><pre class=" language-csharp"><code class="language-csharp"><span class="token punctuation">[</span>Seat<span class="token punctuation">:</span><span class="token operator">*</span><span class="token punctuation">]</span>user<span class="token operator">-</span>session<span class="token operator">=</span><span class="token operator">&lt;</span>DesktopName<span class="token operator">></span></code></pre><p>DesktopName 可以如下查看</p><pre class=" language-undefined"><code class="language-undefined"> ls -l /usr/share/xsessions/</code></pre><p>保存后执行</p><pre class=" language-undefined"><code class="language-undefined">sudo chmod +x /etc/lightdm/lightdm.conf</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加高级电源功能和删除系统软件不卡米教程-理论适用所有小米机</title>
      <link href="/posts/8ed1231d/"/>
      <url>/posts/8ed1231d/</url>
      
        <content type="html"><![CDATA[<p>MIUI破解卡米添加高级电源功能<a id="more"></a></p><p><strong>本文作者：</strong> <strong><a href="http://u6.gg/RxkA" target="_blank" rel="noopener">TOM</a></strong></p><h2 id="合并ODEX"><a href="#合并ODEX" class="headerlink" title="合并ODEX"></a>合并ODEX</h2><p>​    其实教程早就研究好了，只不过是在我的QQ群里没有分享出来。今天发表，一方面是本着分享主义精神感谢那些曾经付出、热爱玩机的人；另一方面是我那个群员比较懒，都不去操作，都想要现成的做出来的，呵呵.。</p><p>​    现在言归正传：先看一张成果图<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/1.jpg" alt=""></p><ol><li><p>下载，安装工具：<a href="https://androidfilehost.com/?w=files&amp;flid=149532" target="_blank" rel="noopener">Apktool X.apk</a>，或者在最下面网盘附件里），授予该<a href="http://bbs.zhiyoo.com/forum-2-1.html" target="_blank" rel="noopener">软件</a>root权限，见图；<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/2.jpg" alt=""></p></li><li><p>利用re管理器复制/system/framework/oat/arm64文件夹下的services.odex和/system/framework文件夹下的services.jar到储存目录中的某一个文件夹，命名为1或其他数字字母等，能找到就行；</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/3.jpg" alt=""></p></li><li><p>然后打开之前安装的Apktool X.apk软件，找到第2步文件夹里面的文件，点击这个services.odex文件，出现一个界面选择“decompile odex for LP, MM and N”反编译，等一会儿可以得到一个services_odex文件夹;<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/4.jpg" alt=""></p></li><li><p>再长按services_odex文件夹（没有毛病哦~~），选择“编译”，就会生成service.dex文件（注意是dex，不是odex哦）<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/5.jpg" alt=""></p></li><li><p>最后点击刚生成的service.dex文件，选择“添加到jar”，你会发现services.jar是不是变大了<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/6.jpg" alt=""></p></li></ol><p>​      总结：你现在生成的这个services.jar文件，也就是我们需要的文件，就是目标文件。可以替换到/system/framework文件夹，改权限为0644（rw-r-r）然后把/system/framework/oat/arm64文件夹下的services.odex文件删除也没有关系，重启可正常开机。其实整个过程并没有修改什么，只是合并了一下odex文件，仅此而已。</p><p>你们也可以考虑用电脑合并odex，欢迎提供工具，大家探讨~~</p><p>后面我又来了灵感，借助黑域补丁的方法另加自己编写的代码，成功制作一键式破解卡米、添加高级电源开关设置的工具，只需要手机连接电脑，点一个按钮，就可不到一分钟破解，哈哈，需要的可以私聊我，或者加群~</p><p>Now，let us do more~~</p><h2 id="添加高级电源功能"><a href="#添加高级电源功能" class="headerlink" title="添加高级电源功能"></a>添加高级电源功能</h2><p>  具体教程如下：可分为简便方法和复杂方法</p><p>​    简便方法：不需要修改代码，直接反编译替换文件，因为替换的文件一般修改很少。如果不成功，就用复杂方法，比较安全。<br>​    前提：解锁bl；刷第三方rec；获取完全root；re管理器；MT管理器  </p><h3 id="简便方法"><a href="#简便方法" class="headerlink" title="简便方法"></a>简便方法</h3><ol><li><p>反编译刚生成的services.jar文件，可以用电脑反编译，也可用手机安装的Apktool X.apk软件，此处我就用手机反编译~~获得services_dec文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/7.jpg" alt=""></p></li><li><p>re管理器打开services_dec文件夹，依次找到smali\com\android\server\policy文件夹下的MiuiGlobalActions$1.smali，下载本教程附件的“MiuiGlobalActions$1.smali”，替换之。<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/8.jpg" alt=""></p></li><li><p>打开Apktool X.apk软件，长按services_dec文件夹，选择“编译”，生成services_dec.jar文件，修改命名为“services.jar”，这就是我们修改的最终文件。</p><p> <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/9.jpg" alt=""></p></li><li><p>将刚生成的services.jar文件利用re管理器替换到/system/framework文件夹，修改权限为0644（rw-r-r），可以删除/system/framework/oat/arm64文件夹下的services.odex文件，没有关系；同时，下载本教程附件的“powermenu”文件，利用re管理器放在\system\media\theme\default文件夹里，修改权限为0644（rw-r-r），重启手机，教程完成！</p></li><li><p>第（4）步附加，其实就是services.jar和powermenu这2个文件掌握高级电源重启，下载附件“小<a href="http://bbs.zhiyoo.com/forum-1998-1.html" target="_blank" rel="noopener">米6</a>-添加高级重启-MIUI9 7.10.26开发版.zip”，这个卡刷包是我做的，所以教你们做卡刷包<del>不想学可以跳过哦</del></p></li></ol><h4 id="卡刷包制作"><a href="#卡刷包制作" class="headerlink" title="卡刷包制作"></a>卡刷包制作</h4><p>​       </p><ol><li><p>请下载本教程附件中的ZArchiver Pro.apk（压缩管家），目前手机上最好的压缩软件，附件已为你们提供。</p></li><li><p>用ZArchiver Pro.apk打开“<a href="http://bbs.zhiyoo.com/gforum-690-1.html" target="_blank" rel="noopener">小米</a>6-添加高级重启-MIUI9 7.10.26开发版.zip”，不是解压哦，点击“查看”<br> <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/10.jpg" alt=""></p></li><li><p>再依次打开system\framework\services.jar，选择右下角的加号，添加我们刚生成的services.jar；以及打开system\media\theme\default\powermenu，选择右下角的加号，添加powermenu。其实在“小米6-添加高级重启-MIUI9 7.10.26开发版.zip”中，powermenu有的话就不要添加，添加了也是原来一样的文件。<br> <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/11.jpg" alt=""><br> <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/12.jpg" alt=""></p></li><li><p>最后就生成了新的对应你那个miui版本的“小米6-添加高级重启-MIUI9 7.10.26开发版.zip”，通过第三方recovery刷入即可。有时间你可以制作更多其他miui版本的卡刷包，供其他人使用，就是因为我QQ群人员太懒，都不愿意去做，所以写了这个教程给你们。懒鬼一个，希望你们不是，呵呵<del>~</del></p></li></ol><h3 id="复杂方法"><a href="#复杂方法" class="headerlink" title="复杂方法"></a>复杂方法</h3><p>​    其实就是要你们自己对smali\com\android\server\policy文件夹下的MiuiGlobalActions$1.smali添加代码，其实也不难，我都会把添加位置告诉你们，这个方法是最安全的哦，因为可能每个MIUI版本MiuiGlobalActions$1.smali文件有可能不同，但是我对比发现，99.99%是一样的。为了安全起见，我还是把这个方法告诉你们吧，免得我被喷。</p><ol><li><p>我们在上面简单方法获得MiuiGlobalActions$1.smali文件，电脑上用notepad++打开此文件，手机上打开也可以，需要专门的文本软件吧，比如MT文件管理器，你们自己找一个。</p></li><li><p>然后搜索“shutdown”，并在上一行添加一段代码，代码见附件；<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/mi/13.jpg" alt=""></p></li><li><p>代码添加好后保存MiuiGlobalActions$1.smali文件，然后回编译servers这个文件夹，同简便方法的（3），获得servers.jar，然后直接替换services.jar和powermenu这2个文件到相应文件夹，记得修改权限；或者下载“小米6-添加高级重启-MIUI9 7.10.26开发版.zip”，把servers.jar替换进zip压缩包里面，千万不能解压放进去然后压缩。</p></li></ol><h2 id="删除内置app不卡米功能（包括删除小米全家桶、安全中心，系统更新等）"><a href="#删除内置app不卡米功能（包括删除小米全家桶、安全中心，系统更新等）" class="headerlink" title="删除内置app不卡米功能（包括删除小米全家桶、安全中心，系统更新等）"></a>删除内置app不卡米功能（包括删除小米全家桶、安全中心，系统更新等）</h2><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><ol><li><p>在第一个主题的简便方法的（1）基础上，打开services_dec文件夹，依次找到smali\com\miui\server文件夹下的SecurityManagerService$1.smali，利用MT管理器直接对它编辑，</p><p>搜索<code>com.android.updater</code>，把这串英文换成<code>com.android.bluetooth</code></p><p>搜索<code>com.miui.securitycenter</code>，把这串英文换成<code>com.android.bluetooth</code></p><p>搜索<code>com.xiaomi.market</code>，这串英文换成<code>com.android.bluetooth</code></p></li><li><p>保存修改！！删除SecurityManagerService$1.smali.bak，不要忘记删除了哦~~</p></li><li><p>打开Apktool X.apk找到services_odex文件夹，点击选择编译，再等一会，就会生成一个services.dex！这样就完美的修改好了</p></li><li><p>然后删除原来提取的services.odex，再点击services.dex选择打包进同名jar文件,再等一会你会发现services.jar的文件大小变大了！然后再点击变大后的services.jar，选择生成odex.等一会就成功了！这个就是为什么要删除官方services.odex的原因呀！</p></li><li><p>然后把新生成的services.odex替换进系统就行了！而新生的services.jar不需要替换的！</p></li></ol><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><ol><li><p>在第一个主题的简便方法的（1）基础上，打开services_dec文件夹，依次找到smali\com\miui\server文件夹下的SecurityManagerService.smali（这个文件同上面不一样哦），利用MT管理器直接对它编辑</p></li><li><p>搜索<code>.method private checkSystemSelfProtection(Z)V</code></p></li><li><p>删除这3行代码:</p><pre><code>  ```smil  new-instance v0, Lcom/miui/server/SecurityManagerService$1;  invoke-direct {v0, p0, p1},  Lcom/miui/server/SecurityManagerService$1;-&gt;&lt;init&gt;(Lcom/miui/server/SecurityManagerService;Z)V  invoke-virtual {v0}, Lcom/miui/server/SecurityManagerService$1;-&gt;start()V  ```</code></pre></li></ol><h3 id="第三种方法"><a href="#第三种方法" class="headerlink" title="第三种方法"></a>第三种方法</h3><ol><li><p>定位SecurityManagerService$1.smali，进行编辑</p></li><li><p>修改验证函数run 直接返回空（利用搜索找到<code>.method public run</code>，改成下面的样子）</p><pre><code>.method public run()V.registers 9.prologuereturn-void.end method</code></pre></li><li><p>定位SecurityManagerService.smali，进行编辑，去除验证</p></li><li><p>利用搜索找到.method public run，改成下面的样子：</p><h4 id="下面这个是app签名校验函数"><a href="#下面这个是app签名校验函数" class="headerlink" title="下面这个是app签名校验函数"></a>下面这个是app签名校验函数</h4><p>​    </p><pre><code>.method private checkAppSignature([Landroid/content/pm/Signature;Ljava/lang/String;Z)V.registers 13.param p1, "validSignatures" # [Landroid/content/pm/Signature;.param p2, "pkgName" # Ljava/lang/String;.param p3, "checkEnabled" # Z.prologuereturn-void.end method</code></pre><h4 id="下面这个是平台签名校验"><a href="#下面这个是平台签名校验" class="headerlink" title="下面这个是平台签名校验"></a>下面这个是平台签名校验</h4><pre><code>.method private checkPlatformSignature([Landroid/content/pm/Signature;)V.registers 9.param p1, "signatures" # [Landroid/content/pm/Signature;.prologuereturn-void.end method</code></pre></li></ol><ol start="5"><li>修改好后回编译，就ok了（参照方法1的2-5步骤）</li></ol><h2 id="附件如下："><a href="#附件如下：" class="headerlink" title="附件如下："></a>附件如下：</h2><p>​    <a href="**https://pan.baidu.com/s/1pLE88wr**">网盘地址</a>  <strong>密码:</strong> <strong>b9w3</strong></p><p><strong>那么欢迎加入手机root技术分享479024282，（交流分享xposed安装方法，红包插件使用技巧和各种玩机技巧.）。。。有不懂的，或出现问题欢迎问我！</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Next主题优化</title>
      <link href="/posts/6f131e07/"/>
      <url>/posts/6f131e07/</url>
      
        <content type="html"><![CDATA[<p>next的美化之路<a id="more"></a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">【持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a></p><p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a></p><p><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></p><h2 id="选择布局"><a href="#选择布局" class="headerlink" title="选择布局"></a>选择布局</h2><p>搜索 scheme</p><p>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo0.png" alt="image"></p><p>Mist - Muse 的紧凑版本，整洁有序的单栏外观</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo1.png" alt="image">Pisces - 双栏 Scheme，小家碧玉似的清新</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo2.png" alt="image"></p><p>Gemini - 左侧网站信息及目录，块+片段结构布局cheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有四行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo3.png" alt="image"></p><h2 id="设置-菜单"><a href="#设置-菜单" class="headerlink" title="设置 菜单"></a>设置 菜单</h2><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p><p>编辑 主题配置文件，修改以下内容：</p><p>||后面对应图标</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo4.jpg" alt="image"></p><p>然后到主题的语言文件添加相应的民称<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/hexo5.jpg" alt="image"></p><h2 id="设置标签、分类的界面"><a href="#设置标签、分类的界面" class="headerlink" title="设置标签、分类的界面"></a>设置标签、分类的界面</h2><p>设置菜单那里，我设置了显示标签、分类、关于几个选项。如图：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/hexo6.jpg" alt="image"></p><p>但是点击进去，却报错：<code>Cannot GET /tags/</code>，不要慌，不能获取tags，创建一个就OK！</p><p>这里介绍创建page的语法：</p><p><code>hexo new page 'name' # name分别为tags、categories</code></p><p>这样就创建了pages。</p><p>在控制台输入以下命令：</p><pre><code>hexo new page 'tags' #创建tags子目录hexo new page 'categories' #创建categories子目录</code></pre><p>在你的网站根目录下面的source文件夹会分别生成tags、categories以及about文件夹。</p><p>分别修改这tags和categories文件夹中的index.md文件，新增type属性，如下：</p><pre><code>---title: tagsdate: 2018-01-04 11:45:41type: tags---</code></pre><p>categories的修改类似。</p><p>当你新建一篇博文的时候，增加上tags和categories属性值，就能在tags和categories界面检索到你的文章了</p><h2 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h2><p>在 themes/next/source/css/_custom/custom.styl 中添加如下代码：</p><pre><code>body{    background:url(/images/bg.jpg);    background-size:cover;    background-repeat:no-repeat;    background-attachment:fixed;    background-position:center;}</code></pre><h2 id="修改Logo字体"><a href="#修改Logo字体" class="headerlink" title="修改Logo字体"></a>修改Logo字体</h2><p>在 <code>themes/next/source/css/_custom/custom.styl</code> 中添加如下代码：</p><pre><code>@font-face {    font-family: Zitiming;    src: url('/fonts/Zitiming.ttf');}.site-title {    font-size: 40px !important;    font-family: 'Zitiming' !important;}</code></pre><p>其中字体文件在 <code>themes/next/source/fonts</code> 目录下，里面有个 <code>.gitkeep</code> 的隐藏文件，打开写入你要保留的字体文件，比如我的是就是写入 <code>Zitiming.ttf</code> ，具体字库自己从网上下载即可。</p><h2 id="修改内容区域的宽度"><a href="#修改内容区域的宽度" class="headerlink" title="修改内容区域的宽度"></a>修改内容区域的宽度</h2><p>编辑主题的 <code>source/css/_variables/custom.styl</code> 文件，新增变量：</p><pre><code>// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px</code></pre><h2 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h2><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> ,在里面写下如下代码：</p><pre><code>.site-meta {  background: $blue; //修改为自己喜欢的颜色}</code></pre><h2 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h2><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> ,在里面写下如下代码：</p><pre><code>// 鼠标样式  * {      cursor: url("http://om8u46rmb.bkt.clouddn.com/sword2.ico"),auto!important  }  :active {      cursor: url("http://om8u46rmb.bkt.clouddn.com/sword1.ico"),auto!important  }</code></pre><h2 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h2><ul><li><p>修改<code>Blog\themes\next\layout\_macro\post.swig</code>中文件，<code>command+f</code>搜索<code>rel="tag"&gt;#</code>，将<code>#</code>替换成<code>&lt;i class="fa fa-tag"&gt;&lt;/i&gt;</code>。输入以下命令，查看效果：</p><pre><code>hexo cleanhexo s</code></pre><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo7.jpg" alt=""></p></li></ul><h2 id="在文章末尾添加“文章结束”标记"><a href="#在文章末尾添加“文章结束”标记" class="headerlink" title="在文章末尾添加“文章结束”标记"></a>在文章末尾添加“文章结束”标记</h2><ul><li><p>在路径<code>Blog\themes\next\layout\_macro</code>文件夹中新建<code>passage-end-tag.swig</code>文件。</p></li><li><p>在passage-end-tag.swig添加以下内容，直接用文本编辑器打开，粘贴以下内容后保存</p><pre><code>&lt;div&gt;    {% if not is_index %}          <div style="text-align:center;color: #ccc;font-size:14px;">-------------本文结束<i class="fa fa-paw"></i>感谢您的阅读-------------</div>      {% endif %}&lt;/div&gt;</code></pre></li></ul><ul><li><p>打开<code>Blog\themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前（<strong>post-footer之前两个DIV</strong>），添加以下代码：</p><pre><code>&lt;div&gt;  {% if not is_index %}      {% include 'passage-end-tag.swig' %}    {% endif %}&lt;/div&gt;</code></pre></li></ul><ul><li><p>添加位置，如下图所示：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo8.jpg" alt=""></p></li><li><p>修改主题配置文件<strong>_config.yml</strong>，在末尾添加：</p><pre><code># 文章末尾添加“本文结束”标记passage_end_tag:  enabled: true</code></pre></li><li><p>效果如下 <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo9.jpg" alt=""></p></li></ul><h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><hr><ul><li><p>在目录<code>Blog/themes/next/layout/_macro/</code>，添加文件 <code>my-copyright.swig</code>，内容如下：</p><pre><code>{% if page.copyright %}  <div class="my_post_copyright">    <script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"></script>        <!-- JS库 sweetalert 可修改路径 -->    <script src="https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"></script>    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>    <p><span>本文标题:</span><a href="{{ url_for(page.path) }}">{{ page.title }}</a></p>    <p><span>文章作者:</span><a href="/" title="访问 {{ theme.author }} 的个人博客">{{ theme.author }}</a></p>    <p><span>发布时间:</span>{{ page.date.format("YYYY年MM月DD日 - HH:MM") }}</p>    <p><span>最后更新:</span>{{ page.updated.format("YYYY年MM月DD日 - HH:MM") }}</p>    <p><span>原始链接:</span><a href="{{ url_for(page.path) }}" title="{{ page.title }}">{{ page.permalink }}</a>      <span class="copy-path" title="点击复制文章链接"><i class="fa fa-clipboard" data-clipboard-text="{{ page.permalink }}" aria-label="复制成功！"></i></span>    </p>    <p><span>许可协议:</span><i class="fa fa-creative-commons"></i> <a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)">署名-非商业性使用-禁止演绎 4.0 国际</a> 转载请保留原文链接及作者。</p>    </div>  <script>       var clipboard = new Clipboard('.fa-clipboard');      $(".fa-clipboard").click(function(){        clipboard.on('success', function(){          swal({               title: "",               text: '复制成功',            icon: "success",             showConfirmButton: true            });      });      });    </script>  {% endif %}</code></pre></li></ul><ul><li><p>在目录<code>Blog/themes/next/source/css/_common/components/post/</code>下添加文件<code>my-post-copyright.styl</code>，添加以下代码：</p><pre><code>.my_post_copyright {  width: 85%;  max-width: 45em;  margin: 2.8em auto 0;  padding: 0.5em 1.0em;  border: 1px solid #d3d3d3;  font-size: 0.93rem;  line-height: 1.6em;  word-break: break-all;  background: rgba(255,255,255,0.4);}.my_post_copyright p{margin:0;}.my_post_copyright span {  display: inline-block;  width: 5.2em;  color: #b5b5b5;  font-weight: bold;}.my_post_copyright .raw {  margin-left: 1em;  width: 5em;}.my_post_copyright a {  color: #808080;  border-bottom:0;}.my_post_copyright a:hover {  color: #a3d2a3;  text-decoration: underline;}.my_post_copyright:hover .fa-clipboard {  color: #000;}.my_post_copyright .post-url:hover {  font-weight: normal;}.my_post_copyright .copy-path {  margin-left: 1em;  width: 1em;  +mobile(){display:none;}}.my_post_copyright .copy-path:hover {  color: #808080;  cursor: pointer;}</code></pre></li></ul><ul><li><p>修改<code>Blog/themes/next/layout/_macro/post.swig</code>，在如图位置添加以下代码：</p><pre><code>&lt;div&gt;      {% if not is_index %}          {% include 'my-copyright.swig' %}        {% endif %}&lt;/div&gt;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo10.jpg" alt=""></p></li><li><p>在<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>文件最后加入下面的代码：</p><pre><code>@import "my-post-copyright"</code></pre></li></ul><ul><li><p>在Markdown文章中加入<code>copyright : ture</code>：</p><pre><code>---title: Hexo-NexT主题配置date: 2018-01-20 20:41:08categories: Hexotags:- Hexo- NexTtop: 100copyright: ture---</code></pre></li></ul><ul><li><p>配置根目录下的<code>_config.yml</code>文件，配置为：</p><pre><code># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://wenmobo.github.io/  //你的网站地址root: /permalink: :year/:month/:day/:title/permalink_defaults:</code></pre><p>效果如下<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo11.jpg" alt=""></p></li></ul><h2 id="添加外链网易云音乐"><a href="#添加外链网易云音乐" class="headerlink" title="添加外链网易云音乐"></a>添加外链网易云音乐</h2><ul><li><p>打开<a href="http://music.163.com/#" target="_blank" rel="noopener">网易云音乐</a>，注册并登陆你的账号号，点击右上角进入我的主页：<br><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo12.jpg" alt=""></p></li><li><p>选择一首你喜欢的歌曲或者创建一个喜欢的歌单，进入详情：</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo13.jpg" alt=""></p></li><li><p>点击生成外链播放器<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo14.jpg" alt=""></p></li><li><p>进入详情，设置喜欢的样式，拷贝代码：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo15.jpg" alt=""></p></li><li><p>将代码粘贴到一个合适的位置，我的粘贴在<code>Blog/themes/next/layout/_macro/sidebar.swig</code>文件下：</p><pre><code>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=310 height=110 src="//music.163.com/outchain/player?type=0&amp;id=371085186&amp;auto=1&amp;height=90"&gt;&lt;/iframe&gt;</code></pre></li></ul><ul><li>效果如下：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo16.jpg" alt=""></li></ul><h2 id="设置头像并设置动画效果"><a href="#设置头像并设置动画效果" class="headerlink" title="设置头像并设置动画效果"></a>设置头像并设置动画效果</h2><p>在主题_config.yml中搜索avatar修改如下:</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo17.jpg" alt="image"></p><h2 id="修改代码块-自定义样式"><a href="#修改代码块-自定义样式" class="headerlink" title="修改代码块``自定义样式"></a>修改代码块``自定义样式</h2><ul><li><p>打开<code>Blog\themes\next\source\css\_custom\custom.styl</code>，添加以下代码：</p><pre><code>// Custom styles.code {    color: #ff7600;    background: #fbf7f8;    margin: 2px;}// 大代码块的自定义样式.highlight, pre {    margin: 5px 0;    padding: 5px;    border-radius: 3px;}.highlight, code, pre {    border: 1px solid #d6d6d6;}</code></pre></li></ul><h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><ul><li><p>打开主题配置文件<code>_config.yml</code>，搜索<code>Social</code>，将你有的社交账号前面的<code>#</code>号去掉。格式为：</p><p><code>[社交平台名]: [社交地址] || [图标名称]</code></p><pre><code>social:  QQ: http://wpa.qq.com/msgrd?v=3&amp;uin=1115144916&amp;site=qq&amp;menu=yes || qq  微信: /images/weixin.png || weixin  微博: https://weibo.com/u/5382366905 || weibo  邮箱: http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=wqq6_-D09vfxgrOz7KGtrw || envelope  #GitHub: https://github.com/yourname || github  #E-Mail: mailto:yourname@gmail.com || envelope  #Weibo: https://weibo.com/yourname || weibo  #Google: https://plus.google.com/yourname || google  #Twitter: https://twitter.com/yourname || twitter  #FB Page: https://www.facebook.com/yourname || facebook  #VK Group: https://vk.com/yourname || vk  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow  #YouTube: https://youtube.com/yourname || youtube  #Instagram: https://instagram.com/yourname || instagram  #Skype: skype:yourname?call|chat || skype</code></pre><ul><li>图标可以去<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">Font Awesome Icon</a>网站去找，找到后复制名字到相应的位置即可。</li></ul></li></ul><h2 id="添加网页顶部进度加载条"><a href="#添加网页顶部进度加载条" class="headerlink" title="添加网页顶部进度加载条"></a>添加网页顶部进度加载条</h2><ul><li><p>编辑主题配置文件，<code>command+F</code>搜索<code>pace</code>，将其值改为<code>ture</code>就可以了，选择一款你喜欢的样式。</p><pre><code># Progress bar in the top during page loading.pace: ture# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal</code></pre></li></ul><h2 id="底部隐藏由Hexo强力驱动、主题–NexT-Mist"><a href="#底部隐藏由Hexo强力驱动、主题–NexT-Mist" class="headerlink" title="底部隐藏由Hexo强力驱动、主题–NexT.Mist"></a>底部隐藏由Hexo强力驱动、主题–NexT.Mist</h2><ul><li><p>主题配置文件搜索<code>powered</code>修改如下</p><pre><code>  powered:    # Hexo link (Powered by Hexo).    enable: false    # Version info of Hexo after Hexo link (vX.X.X).    version: false  theme:    # Theme &amp; scheme info link (Theme - NexT.scheme).    enable: false    # Version info of NexT after scheme info (vX.X.X).    version: false</code></pre></li></ul><h2 id="添加DaoVoice在线联系"><a href="#添加DaoVoice在线联系" class="headerlink" title="添加DaoVoice在线联系"></a>添加DaoVoice在线联系</h2><ul><li><p>首先到<a href="https://www.daocloud.io/" target="_blank" rel="noopener">DaoVoice</a>注册账号，登录成过后，进入到后台管理，点击<strong>应用设置——&gt;安装到网站</strong>查看安装代码和AppID。</p></li><li><p>将安装代码添加到<code>Blog/themes/next/layout/_partials/head.swig</code>中：</p><pre><code>{% if theme.daovoice %}    <script>    (function(i,s,o,g,r,a,m){i["DaoVoiceObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)})(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice")    daovoice('init', {        app_id: "{{theme.daovoice_app_id}}"      });    daovoice('update');    </script>  {% endif %}</code></pre></li><li><p>编辑主题配置文件，添加如下代码：</p><pre><code># Online contact daovoice: truedaovoice_app_id: daovoice_app_id</code></pre></li></ul><p>​      效果图如下所示：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo18.jpg" alt=""></p><h2 id="添加友链"><a href="#添加友链" class="headerlink" title="添加友链"></a>添加友链</h2><ul><li><p>编辑主题配置文件，如下配置即可：</p><pre><code># Blog rollslinks_icon: linklinks_title: 推荐阅读#links_layout: blocklinks_layout: inlinelinks:  Swift 4: https://developer.apple.com/swift/  Objective-C: https://developer.apple.com/documentation/objectivec</code></pre></li></ul><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>打开 <code>themes/*/layout/_partials/head.swig</code>文件,在 <style type="text/css" lang="css">    #loading-container{        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    }    .loading-image{        width: 120px;        height: 50px;        transform: translate(-50%);    }    .loading-image div:nth-child(2) {        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    }    .loading-image div:nth-child(3) {        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    }    .loading-image div:nth-child(4) {        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    }    .loading-image div:nth-child(5) {        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    }   .loading-image div:first-of-type {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    }    .loading-image div:nth-child(2) {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    }    @-webkit-keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @-webkit-keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @-webkit-keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    @keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6){        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    }    .loading-text{        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    }    @media only screen and (max-width: 500px) {         .loading-text{            font-size: 1.5rem;         }    }    .fadeout {        opacity: 0;        filter: alpha(opacity=0);    }    /* logo出现动画 */    @-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}    @keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);}} </style> <script>(function () {    const loaded = function(){       setTimeout(function(){            const loader = document.getElementById("loading-container");            loader.className="fadeout" ;//使用渐隐的方法淡出loading page            // document.getElementById("body-wrap").style.display="flex";            setTimeout(function(){                loader.style.display="none";            },1000);         },1000);//强制显示loading page 1s      };    loaded();})() </script><meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/atom.xml" title="雄哥の博客" type="application/atom+xml"><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css">之前插入代码：</p><pre><code>&lt;script&gt;    (function(){        if('{{ page.password }}'){            if (prompt('请输入密码') !== '{{ page.password }}'){                alert('密码错误');                history.back();            }        }    })();&lt;/script&gt;</code></pre><p>写文章时加上<code>password: *</code>：</p><pre><code>---title: 2018date: 2018-10-25 16:10:03password: 123456---</code></pre><h4 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h4><p>目前主要问题是：</p><ul><li>丑。调用浏览器的UI，各个平台的样式不统一。</li><li>可能被破解。如果你的博客源码是存放在GitHub这样的开源库的话，那么恭喜你。别有用心之人可以通过查看你的GitHub仓库对应文章的md文件找到这个密码。</li></ul><h3 id="方法二（推荐）"><a href="#方法二（推荐）" class="headerlink" title="方法二（推荐）"></a>方法二（推荐）</h3><p>安装插件：<code>npm install --save hexo-blog-encrypt</code></p><ol><li><p>首先在 <strong>站点配置文件</strong> 中启用该插件:</p><pre><code>encrypt:    enable: true</code></pre></li><li><p>然后在你的文章的头部添加上对应的字段，如 password, abstract, message</p><pre><code>---title: 文章加密date: 2019-01-04T22:20:13.000Zcategory: 教程tags:  - 博客  - Hexokeywords: 博客文章密码password: TloveYabstract: 密码：TloveYmessage:  输入密码，查看文章---</code></pre><ul><li>password: 是该博客加密使用的密码</li><li>abstract: 是该博客的摘要，会显示在博客的列表页</li><li>message: 这个是博客查看时，密码输入框上面的描述性文字</li></ul></li><li><p>如果你想对 TOC 也进行加密，则在 article.ejs 中将 TOC 的生成代码修改成如下：</p><pre><code>&lt;% if(post.toc == true){ %&gt;        &lt;div id="toc-div" class="toc-article" &lt;% if (post.encrypt == true) { %&gt;style="display:none" &lt;% } %&gt;&gt;            &lt;strong class="toc-title"&gt;Index&lt;/strong&gt;            &lt;% if (post.encrypt == true) { %&gt;                &lt;%- toc(post.origin) %&gt;            &lt;% } else { %&gt;                &lt;%- toc(post.content) %&gt;            &lt;% } %&gt;        &lt;/div&gt;    &lt;% } %&gt;    &lt;%- post.content %&gt;</code></pre></li><li><p>然后使用 <em>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</em>，来查看效果。</p></li></ol><h4 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h4><ol><li><p>如果你对默认的主题不满意，或者希望修改默认的提示和摘要内容，你可以添加如下配置在 <strong>站点配置文件</strong> 中。</p><pre><code>encrypt:  enable: true  default_abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你确实想看，请与我联系。  default_message: 输入密码，查看文章。</code></pre><p>这样，对于每一篇需要加密的文章就不必都在在头部添加 <strong>abstract</strong> 和 <strong>message</strong> 字段了，脚本会自动添加默认的内容填充。</p></li><li><p>如果你希望对某一篇特定的文章做特殊处理（如本文的 <strong>abstract</strong> ，可以在对应文章的头部添加</p><pre><code>---title: 文章加密date: 2019-01-04T22:20:13.000Zcategory: 教程tags:  - 博客  - Hexokeywords: 博客文章密码password: TloveYabstract: 密码：TloveY---</code></pre><p>此时，博客头部的 <strong>abstract</strong> 会覆盖 <strong>站点配置文件</strong> 的 <strong>default_abstract</strong> 实现自定义。</p></li></ol><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><ol><li><p>在<code>/themes/next/source/js/src</code>下新建文件<code>click.js</code>，接着把以下粘贴到<code>click.js</code>文件中。<br>代码如下：</p><pre><code>!function(e,t,a){function n(){c(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)}function o(){var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement("div");a.className="heart",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement("style");a.type="text/css";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName("head")[0].appendChild(a)}function s(){return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);</code></pre></li><li><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</p></li></ol><pre><code>&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/clicklove.js"&gt;&lt;/script&gt;</code></pre><h2 id="实现点击爆炸效果"><a href="#实现点击爆炸效果" class="headerlink" title="实现点击爆炸效果"></a>实现点击爆炸效果</h2><p>效果如图<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo19.jpg" alt=""></p><ol><li>首先在<code>themes/next/source/js/src</code>里面建一个叫fireworks.js的文件，代码如下：</li></ol><pre><code>"use strict";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:"linear",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(".fireworks");if(canvasEl){var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)}"use strict";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t&lt;e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:"linear",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(".fireworks");if(canvasEl){var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)};</code></pre><ol start="2"><li>打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</li></ol><pre><code>{% if theme.fireworks %}   <canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"></canvas>    <script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"></script>    <script type="text/javascript" src="/js/src/fireworks.js"></script>{% endif %}</code></pre><ol start="3"><li>打开主题配置文件，在里面最后写下：</li></ol><pre><code># Fireworksfireworks: true静态资源压缩</code></pre><h2 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h2><p>在站点目录下： <code>npm install gulp -g</code></p><ol><li>安装gulp插件：</li></ol><pre><code>npm install gulp-minify-css --savenpm install gulp-uglify --savenpm install gulp-htmlmin --savenpm install gulp-htmlclean --savenpm install gulp-imagemin --save</code></pre><ol start="2"><li>在 <code>Hexo</code> 站点下新建 <code>gulpfile.js</code>文件，文件内容如下：</li></ol><pre><code>var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');var imagemin = require('gulp-imagemin');// 压缩css文件gulp.task('minify-css', function() {  return gulp.src('./public/**/*.css')  .pipe(minifycss())  .pipe(gulp.dest('./public'));});// 压缩html文件gulp.task('minify-html', function() {  return gulp.src('./public/**/*.html')  .pipe(htmlclean())  .pipe(htmlmin({    removeComments: true,    minifyJS: true,    minifyCSS: true,    minifyURLs: true,  }))  .pipe(gulp.dest('./public'))});// 压缩js文件gulp.task('minify-js', function() {    return gulp.src(['./public/**/.js','!./public/js/**/*min.js'])        .pipe(uglify())        .pipe(gulp.dest('./public'));});// 压缩 public/demo 目录内图片gulp.task('minify-images', function() {    gulp.src('./public/demo/**/*.*')        .pipe(imagemin({           optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）           progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片           interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染           multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化        }))        .pipe(gulp.dest('./public/uploads'));});// 默认任务gulp.task('default', [  'minify-html','minify-css','minify-js','minify-images']);</code></pre><ol start="3"><li>只需要每次在执行 <code>generate</code> 命令后执行 <code>gulp</code> 就可以实现对静态资源的压缩，压缩完成后执行 <code>deploy</code> 命令同步到服务器：</li></ol><pre><code>hexo ggulphexo d</code></pre><h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><ol><li>插件安装</li></ol><pre><code>$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save</code></pre><ol start="2"><li>然后在需要置顶的文章的Front-matter中加上top即可：</li></ol><pre><code>---title: 2018date: 2018-10-25 16:10:03top: 10---</code></pre><ol start="3"><li>设置置顶标志打开：/themes/*/layout/_macro/post.swig，定位到<div class="post-meta">标签下，插入如下代码：</div></li></ol><pre><code>  {% if post.top %}         <i class="fa fa-thumb-tack"></i>         <font color="7D26CD">置顶</font>         <span class="post-meta-divider">|</span>   {% endif %}</code></pre><h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><ol><li>选择样式<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>,</li><li>修改图片跳转链接,将<code>&lt;a href="https://github.com/you"&gt;</code>中的链接换为自己Github链接：</li><li>打开 <code>themes/next/layout/_layout.swig</code> 文件，把代码复制到<code>&lt;div class="headband"&gt;&lt;/div&gt;</code>下面。</li></ol><h2 id="主页文章添加边框阴影效果"><a href="#主页文章添加边框阴影效果" class="headerlink" title="主页文章添加边框阴影效果"></a>主页文章添加边框阴影效果</h2><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> ,向里面加代码:</p><pre><code>// 主页文章添加阴影效果.post {   margin-top: 0px;   margin-bottom: 60px;   padding: 25px;   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);}</code></pre><h2 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h2><p>修改<code>themes/next/_config.yml</code>，把 <code>false</code> 改为 <code>true</code>：</p><pre><code>back2top:  enable: true  # Back to top in sidebar.  sidebar: true  # Scroll percent label in b2t button.  scrollpercent: true</code></pre><h2 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2><ol><li><p>安装插件npm install –save hexo-helper-<code>live2d</code></p></li><li><p>安装你喜欢的模型 npm install –save live2d-widget-model-你喜欢的模型名字<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">模型预览</a></p><p>Epsilon2.1</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo20.gif" alt=""></p><p>Gantzert_Felixander</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo21.gif" alt=""></p><p>haru</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo22.gif" alt=""></p><p>miku</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo23.gif" alt=""></p><p>shizuku</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo24.gif" alt=""></p><p>z16</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo25.gif" alt=""></p><p>koharu</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo26.gif" alt=""></p></li></ol><ol start="3"><li>在站点的<code>_config.yml</code> 文件添加配置.</li></ol><pre><code>live2d:  enable: true  scriptFrom: local  pluginRootPath: live2dw/  pluginJsPath: lib/  pluginModelPath: assets/  tagMode: false  debug: false  model:    use: live2d-widget-model-你喜欢的模型名字  display:    position: right    width: 150    height: 300  mobile:    show: true</code></pre><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><table><thead><tr><th align="center"></th><th align="center"><strong>推荐指数</strong></th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center"><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a></td><td align="center">4</td><td align="center">每天30000条评论，10GB的储存</td><td align="center">作者评论无标识</td></tr><tr><td align="center"><a href="https://livere.com/" target="_blank" rel="noopener">来必力/livere</a></td><td align="center">4</td><td align="center">多种账号登录</td><td align="center">评论无法导出</td></tr><tr><td align="center"><a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a></td><td align="center">3</td><td align="center">美观</td><td align="center">必须备案域名</td></tr><tr><td align="center"><a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">gitment</a></td><td align="center">3</td><td align="center">简洁</td><td align="center">只能登陆github评论</td></tr><tr><td align="center">Disqus</td><td align="center">1</td><td align="center"></td><td align="center">需要翻*墙</td></tr></tbody></table><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><ol><li><p>获取APP ID 和 APP Key</p><p>请先登录或注册 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>, 进入控制台后点击左下角创建应用，然后存储里创建一个Counter的Class</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo27.jpg" alt="image"></p><ol start="2"><li>选择左下角的<code>设置</code>&gt;<code>应用Key</code>，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo28.jpg" alt="image"></p><ol start="3"><li><p>填写APP ID 和 APP Key到主题配置文件<code>_config.yml</code></p><p>搜索<code>valine</code>将enable设置为true</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo29.jpg" alt="image"></p><h3 id="来必力-livere"><a href="#来必力-livere" class="headerlink" title="来必力/livere"></a>来必力/livere</h3><ol><li><p>登陆 <a href="https://livere.com/" target="_blank" rel="noopener">来必力</a> 获取你的 LiveRe UID</p></li><li><p>填写LiveRe UID到主题配置文件<code>_config.yml</code></p><p>​    搜索<code>livere</code>去掉前面的#号，后面填上uid</p></li></ol><h3 id="畅言"><a href="#畅言" class="headerlink" title="畅言"></a>畅言</h3><ol><li>获取APP ID 和 APP Key</li><li>请先登录或注册 <a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言</a>, 点击“立即免费获取畅言”，</li><li>新建站点，点击管理，点击评论插件&gt;评论管理，</li><li>点击后台总览，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了</li><li>填写APP ID 和 APP Key到主题配置文件<code>_config.yml</code></li><li>运行<code>hexo g&amp;&amp;hexo d</code>推送到博客</li></ol><h3 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h3><ol><li><p>安装插件：<code>npm i --save gitment</code></p></li><li><p>申请应用，在<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">New OAuth App</a>为你的博客应用一个密钥:</p><pre><code>Application name:随便写Homepage URL:这个也可以随意写,就写你的博客地址就行Application description:描述,也可以随意写Authorization callback URL:这个必须写你的博客地址</code></pre></li><li><p>编辑主题配置文件<code>themes/*/_config.yml</code>:</p><pre><code># Gitment# Introduction: https://imsun.net/posts/gitment-introduction/gitment:  enable: true  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway  count: true # Show comments count in post meta area  lazy: false # Comments lazy loading with a button  cleanly: false # Hide 'Powered by ...' on footer, and more  language: # Force language, or auto switch by theme  github_user: {you github user id}  github_repo: 公开的git仓库,评论会作为那个项目的issue  client_id: {刚才申请的ClientID}  client_secret: {刚才申请的Client Secret}  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect  redirect_protocol: # Protocol of redirect_uri with force_redirect_pro</code></pre><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h3><p>编辑 主题配置文件<code>themes/*/_config.yml</code>， 将 disqus 下的 enable 设定为 true，同时提供您的 shortname。count 用于指定是否显示评论数量。next7.0好像没有了</p><pre><code>disqus:  enable: false  shortname:  count: true</code></pre></li></ol><h2 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h2><table><thead><tr><th align="center">名称</th><th><strong>推荐指数</strong></th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center"><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a></td><td>4</td><td align="center">可直接将访问次数显示在您在网页上（也可不显示）</td><td align="center">只计数</td></tr><tr><td align="center">百度统计</td><td>3</td><td align="center"></td><td align="center">收录慢</td></tr></tbody></table><h3 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h3><p>   编辑 主题配置文件 <code>themes/next/_config.yml</code>中的<code>busuanzi_count</code>的配置项即可。</p><ul><li><p>当<code>enable: true</code>时，代表开启全局开关。</p></li><li><p>若<code>site_uv</code>（本站访客数）、<code>site_pv</code>（本站访客数）、<code>page_pv</code>（本文总阅读量）的值均为<code>false</code>时，不蒜子仅作记录而不会在页面上显示。</p></li><li><p>在<code>\themesnext\layout_third-party\analytics\busuanzi-counter.swig</code>里添加本站访问量:</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo30.jpg" alt="image"></p></li><li><p>效果图如下<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo31.jpg" alt="image"></p><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3></li></ul><ol><li>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>，定位到站点的代码获取页面</li><li>复制统计脚本 id，如图<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo32.jpg" alt=""></li><li>编辑 主题配置文件<code>themes/*/_config.yml</code>，修改字段 <code>google_analytics</code>，值设置成你的统计脚本 id。</li></ol><h2 id="内容分享服务"><a href="#内容分享服务" class="headerlink" title="内容分享服务"></a>内容分享服务</h2><table><thead><tr><th align="center"></th><th align="center">推荐指数</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center"><a href="http://share.baidu.com/" target="_blank" rel="noopener">百度分享</a></td><td align="center">4</td><td align="center">稳定</td><td align="center">不太美观</td></tr><tr><td align="center"><a href="https://github.com/revir/need-more-share2" target="_blank" rel="noopener">need-more-share2</a></td><td align="center">4</td><td align="center">美观</td><td align="center">更新不及时（比如微信分享API）</td></tr></tbody></table><h3 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h3><p>​    编辑 主题配置文件，添加/修改字段 <code>baidushare</code>，值为 <code>true</code>即可。</p><pre><code># 百度分享服务baidushare: true</code></pre><h3 id="need-more-share2"><a href="#need-more-share2" class="headerlink" title="need-more-share2"></a>need-more-share2</h3><p>编辑 主题配置文件，添加/修改字段 <code>needmoreshare2</code>，值为 <code>true</code>即可。</p><pre><code>needmoreshare2:  enable: true</code></pre><p>打开CDN加速</p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo33.jpg" alt=""></p><h2 id="搜索服务"><a href="#搜索服务" class="headerlink" title="搜索服务"></a>搜索服务</h2><table><thead><tr><th align="center"></th><th align="center">推荐指数</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center">Local Search</td><td align="center">4</td><td align="center">配置方便</td><td align="center"></td></tr><tr><td align="center">Swiftype</td><td align="center">2</td><td align="center"></td><td align="center">需注册</td></tr><tr><td align="center">Algolia</td><td align="center">2</td><td align="center"></td><td align="center">需注册</td></tr></tbody></table><h3 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h3><p>   添加百度/谷歌/本地 自定义站点内容搜索</p><ol><li><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：<code>npm install hexo-generator-searchdb --save</code></p></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p><pre><code>search:  path: search.xml  field: post  format: html  limit: 10000</code></pre></li></ol><ol start="3"><li><p>编辑 主题配置文件，启用本地搜索功能：</p><pre><code># Local searchlocal_search:  enable: true</code></pre></li></ol><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ol><li><p>博客集成来必力后，标签、分类、分类显示评论组件，这里需要隐藏,打开根目录，找到如下文件夹：<img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/images/Hexo-Next/hexo34.jpg" alt=""></p></li><li><p>编辑<strong>index.md</strong>文件，添加<strong>comments</strong>将其值设为<strong>false</strong>:</p><pre><code>---title: tagsdate: 2018-01-20 18:57:48type: "tags"comments: false---</code></pre></li><li><p>然后执行，就没有评论框了：</p><pre><code>hexo cleanhexo ghexo d</code></pre></li></ol><h2 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h2><ul><li><p>主题配置搜索<code>reward</code>修改为<code>true</code></p><pre><code>reward:  enable: true  #comment: Donate comment here  wechatpay: /images/ds_weixin.png  alipay: /images/da_zhifubao.png  #bitcoin: /images/bitcoin.jpg</code></pre></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>  终于搭建好自己的小窝啦，这里是我的成果： <a href="http://xiongge.top">我的博客</a>，从最开始无从下手，到一步步搭建起各种效果，自己还是挺有成就感的，虽然让自己折腾了好几天，但还是值得的，在搭建的过程中，自己也参考了很多优秀的博客，非常感谢博主的无私分享。如果以后有更多好看炫酷的效果，我也会在本篇博文中更新。如果你也想开始搭建自己的专属静态博客，就赶快行动吧</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> next </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加文章时自动打开编辑器</title>
      <link href="/posts/e7fa2d4f/"/>
      <url>/posts/e7fa2d4f/</url>
      
        <content type="html"><![CDATA[<p>本文转载于  <a href="https://notes.doublemine.me/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html" target="_blank" rel="noopener">博主： 夏末</a><a id="more"></a></p><p>在Hexo中新建一篇博文非常简单，只需要在命令行中键入以下命令然后回车即可：<br>    <code>hexo new "The title of your blog"</code><br>此后Hexo便会在Hexo的根目录的source文件夹下的_posts目录下自动帮你创建相应的md文件。然后我们打开该目录，找到刚刚Hexo自动生成的文件打开编辑即可。</p><p>但是当我们的博文比较多，这样我们就需要在成堆的Markdown文件中找到刚才自动生成的文件，这样做显然是一件比较痛苦的事情。</p><p>在访问Hexo的Github项目时，发现有类似的issue，Hexo作者也给出来解决办法，以下为作者原文：</p><p>ou can try to listen to the new event. For example:</p><pre class=" language-var"><code class="language-var">// Hexo 2.x    hexo.on('new', function(path){            exec('vi', [path]);    });// Hexo 3    hexo.on('new', function(data){        exec('vi', [data.path]);    });</code></pre><p>根据作者给出的示例，一番折腾过后博主终于在自己的机器上实验成功了，下面给出操作步骤：</p><ul><li>首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件。</li><li>如果没有这个scripts目录，则新建一个。</li><li>scripts目录新建的JavaScript脚本文件可以任意取名。如: <code>auto open post.js</code></li><li>通过这个脚本，我们用其来监听hexo new这个动作，并在检测到hexo new之后，执行编辑器打开的命令。</li><li>如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：<pre class=" language-var"><code class="language-var"></code></pre></li></ul><p>// Hexo 2.x 用户复制这段<br>    hexo.on(‘new’, function(path){<br>        spawn(‘start  “markdown编辑器绝对路径.exe” ‘ + path);<br>    });</p><p>// Hexo 3 用户复制这段<br>    hexo.on(‘new’, function(data){<br>        spawn(‘start  “markdown编辑器绝对路径.exe” ‘ + data.path);<br>    });</p><pre><code>- 如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：```var exec = require('child_process').exec;// Hexo 2.x 用户复制这段    hexo.on('new', function(path){     exec('open -a "markdown编辑器绝对路径.app" ' + path);    });// Hexo 3 用户复制这段    hexo.on('new', function(data){        exec('open -a "markdown编辑器绝对路径.app" ' + data.path);    });</code></pre><ul><li>保存并退出脚本之后，在命令行中键入：<br><code>hexo new "auto open editor test"</code><br>windows10会弹出选择默认的编辑器，选择使用的编辑就好了。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多终端同步博客</title>
      <link href="/posts/a7e41fa1/"/>
      <url>/posts/a7e41fa1/</url>
      
        <content type="html"><![CDATA[<p>多端同步博客<a id="more"></a></p><h2 id="A电脑："><a href="#A电脑：" class="headerlink" title="A电脑："></a><strong>A电脑：</strong></h2><ul><li><p>添加 /.deploy_git, /public 到.gitignore文件末尾,一个一行</p><p> <img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/%E5%9B%BE%E5%BA%8A/%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/1.jpg" alt="image"></p></li><li><p>初始化本地仓库<br><code>git init</code></p></li><li><p>将本地仓库与远程仓库对接<br> <code>git remote add origin git@github.com:hx926453/926453.github.io.git</code></p></li><li><p>添加所有本地文件到git  <code>git add .</code>  <strong><em>注意:如果自己的主题是克隆下来的,先把主题下的.git文件夹和.gitignore文件删除,不然上传不上去</em></strong></p></li><li><p>git提交<br><code>git commit -m "提交hexo配置文件"</code></p></li><li><p>新建分之并切换<br> <code>git branch hexo</code><br> <code>git checkout hexo</code></p></li><li><p>push到Github项目的hexo分支上<br><code>git push origin hexo</code></p><p><img src="https://cdn.jsdelivr.net/gh/hx926453/Imges/images/loading.gif# eg ./images/loading.gif" data-original="/%E5%9B%BE%E5%BA%8A/%E5%A4%9A%E7%AB%AF%E5%90%8C%E6%AD%A5/2.jpg" alt="image"></p></li></ul><h2 id="B电脑："><a href="#B电脑：" class="headerlink" title="B电脑："></a>B电脑：</h2><ul><li>安装好必备环境:git,nodejs,hexo</li><li>将hexo分支克隆岛本地:<br> <code>git clone -b hexo git@github.com:hx926453/hx926453.github.io.git</code></li><li>安装依赖<br> <code>npm install</code></li></ul><h2 id="环境装好就可多端同步更新博客了"><a href="#环境装好就可多端同步更新博客了" class="headerlink" title="环境装好就可多端同步更新博客了"></a>环境装好就可多端同步更新博客了</h2><ul><li>先从远程仓库pull<br> <code>git pull git@github.com:hx926453/hx926453.github.io.git hexo</code></li><li>写博客<br> <code>hexo n "test多端同步"</code></li><li>利用Markdown编辑器编辑</li><li>添加source文件夹到本地git,因为只更改了source文件夹<br> <code>git add source</code></li><li>提交<br> <code>git commit -m "添加多终端同步更新博客"</code></li><li>push到远程仓库hexo分支<br> <code>git push origin hexo</code></li><li>部署<br> <code>hexo g -d</code></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
